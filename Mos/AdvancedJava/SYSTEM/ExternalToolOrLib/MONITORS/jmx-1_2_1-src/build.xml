<?xml version="1.0"?>

<project name="JMX" default="jar" basedir=".">

    <!-- "#ident: @(#)build_src_delivery.xml 1.2 02/10/25 -->

    <description>
	This buildfile builds the JMX sources and examples
    </description>


    <!-- ***************************** -->
    <!-- *** PROJECT WIDE SETTINGS *** -->
    <!-- ***************************** -->

    <property name="dir.src"		location="src"      />
    <property name="dir.lib"		location="lib"      />
    <property name="dir.build"		location="build"    />
    <property name="dir.examples"	location="examples" />

    <path id="classpath.tobuild.examples">
	<!-- Include all jar files in ${dir.lib} -->
        <fileset dir="${dir.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>



    <!-- ********************* -->
    <!-- *** BUILD TARGETS *** -->
    <!-- ********************* -->


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Build all JMX RI java files from ${dir.src} to ${dir.build}/classes -->

    <target name="classes"
	    description="Build all JMX RI java files from ${dir.src} to ${dir.build}/classes" >
        <mkdir dir="${dir.build}/classes" />
	<javac 	srcdir="${dir.src}" 
		destdir="${dir.build}/classes" 
		debug="on"
		debuglevel="lines,source"
		optimize="on"
		target="1.2"
		includeAntRuntime="no"
		includeJavaRuntime="no"		
	/>
    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Jar all files from ${dir.build}/classes into ${dir.build}/lib/jmxri.jar -->

    <target name="jar" depends="classes"
            description="Jar all files from ${dir.build}/classes into ${dir.build}/lib/jmxri.jar" >

       <mkdir dir="${dir.build}/lib" />

       <jar jarfile="${dir.build}/lib/jmxri.jar" 
            basedir="${dir.build}/classes" >
       </jar>

    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Delete all *.class files in the ${dir.build}/classes dir. Leave directories -->

    <target name="clean"
            description="Delete all *.class files in the ${dir.build}/classes dir. Leave directories. " >
        <delete>
           <fileset dir="${dir.build}/classes" includes="**/*.class" />
        </delete>
    </target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Delete all build created directories and their contents -->

    <target name="cleanall" 
            description="Delete all build created directories and their contents. " >
        <delete dir="${dir.build}" />
    </target>               
        
  
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Clean and build everything -->

    <target name="all" depends="cleanall,classes,jar,examples" 
	    description="Equivalent to ant cleanall classes jar examples. " />


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Build all examples java files from ${dir.examples} to ${dir.build}/examples -->

    <target name="examples"
            description="Build all JMX EXAMPLES java files from ${dir.examples} to ${dir.build}/examples" >

        <mkdir dir="${dir.build}/examples/BaseAgent" />
        <javac srcdir="${dir.examples}/BaseAgent" 
               destdir="${dir.build}/examples/BaseAgent"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/DynamicMBean" />
        <javac srcdir="${dir.examples}/DynamicMBean" 
               destdir="${dir.build}/examples/DynamicMBean"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/ModelMBean" />
        <javac srcdir="${dir.examples}/ModelMBean" 
               destdir="${dir.build}/examples/ModelMBean"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/MonitorMBean" />
        <javac srcdir="${dir.examples}/MonitorMBean" 
               destdir="${dir.build}/examples/MonitorMBean"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/OpenMBean" />
        <javac srcdir="${dir.examples}/OpenMBean" 
               destdir="${dir.build}/examples/OpenMBean"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/Relation" />
        <javac srcdir="${dir.examples}/Relation" 
               destdir="${dir.build}/examples/Relation"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

        <mkdir dir="${dir.build}/examples/StandardMBean" />
        <javac srcdir="${dir.examples}/StandardMBean" 
               destdir="${dir.build}/examples/StandardMBean"
               debug="${flag.debug}"
               deprecation="${flag.deprecation}">
           <classpath refid="classpath.tobuild.examples" />
        </javac>

    </target>

</project>

